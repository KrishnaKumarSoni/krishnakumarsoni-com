const credentials = require("./creds/offerings-sheet-credentials.json");const offerings = require("./static/configurations/offerings.json");const fetch = require("node-fetch");const jwt = require("jsonwebtoken");
const getAccessToken = async () => {const token = jwt.sign({iss: credentials.client_email,scope: "https://www.googleapis.com/auth/spreadsheets",aud: credentials.token_uri,exp: Math.floor(Date.now() / 1000) + 3600,iat: Math.floor(Date.now() / 1000)},credentials.private_key,{ algorithm: "RS256" });const response = await fetch(credentials.token_uri,{method: "POST",headers: {"Content-Type": "application/x-www-form-urlencoded"},body: `grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer&assertion=${token}`});const data = await response.json();return data.access_token;};
const formatOfferingsData = () => {const headers = ["id", "title", "description", "benefits", "slots_left", "slots_limited", "price"];const rows = [headers];offerings.offerings.forEach(offering => {rows.push([offering.id,offering.title,offering.description,offering.benefits.join("\n"),offering.slots_left,offering.slots_limited,offering.price]);});return rows;};
const updateSheet = async () => {const accessToken = await getAccessToken();const sheetId = "1VIU1X-ZfvQT02qFCOAAjBQXDaDSMty8UTaGAPgMFQLI";const range = "offerings!A1:G5";const values = formatOfferingsData();const response = await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${range}?valueInputOption=RAW`,{method: "PUT",headers: {"Authorization": `Bearer ${accessToken}`,"Content-Type": "application/json"},body: JSON.stringify({range: range,values: values})});const data = await response.json();console.log("Update response:", data);};updateSheet().catch(console.error);
